// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String
  email          String        @unique
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  image          String?
  emailVerified  Boolean
  sessions       Session[]
  accounts       Account[]
  settings       UserSettings?
  posts          Posts[]
}

model Session {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  User         User?    @relation(fields: [userId], references: [id])
  userId       String   @db.Uuid
  token        String   @unique
  expiresAt    DateTime
  ipAddress    String?
  userAgent    String?
  createdAt    DateTime
  updatedAt    DateTime
}

model Account {
  id                String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  User              User?   @relation(fields: [userId], references: [id])
  userId            String  @db.Uuid
  accountId         String  
  providerId        String  
  accessToken       String?
  refreshToken      String?
  accessTokenExpiresAt DateTime?
  refreshTokenExpiresAt DateTime?
  scope             String?
  idToken           String?
  password          String?
  createdAt         DateTime
  updatedAt         DateTime
}

model Verification {
  id         String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime
  updatedAt  DateTime
}

model Posts {
  id     String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  User   User?   @relation(fields: [userId], references: [id])
  userId String? @db.Uuid
  postTitle String // No Rich Text
  slug  String
  excerpt String?
  contentHtml String
  contentJson Json?
  tags  String[]
  published Boolean @default(false)
  publishedAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserSettings {
  id     String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  User   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.Uuid
}
